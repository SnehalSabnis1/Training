
# pseudocode:

start
read array a
length=n
for i in the range of 0 to n-1:
for j in the range of 0 to n-i-1:
if a[j]>a[j+1]
swap a[j] and a[j+1]
end for 
end for
print sorted array temp
end


function swap(arr,num1, num2)
declare variable temp
int temp = num1
    num1 = num2
    num2 = arr		
return arr
end


##dry run:

case 1:
a=[5,2,4,3]
a[j]=5 and a[j+1]=2, swap because 5 > 2 : [2,5,4,3]
a[j]=5 and a[j+1]=4, swap because 5 > 4 : [2,4,5,3]
a[j]=5 and a[j+1]=3, swap because 5 > 3 : [2,4,3,5]
case 2:
a[j]=4 and a[j+1]=3, swap because 4 > 3 : [2,3,4,5]
a[j]=4 and a[j+1]=5, no swap            : [2,3,4,5]
case 3:
[j]=4 and a[j+1]=5, no swap            : [2,3,4,5]

After the third pass, no swaps are needed, indicating that the array is already sorted.

So, the sorted array is [2,3,4,5].

###explanation :

bubble sort is used to sort the elements.at first we have an unsorted list
in bubble sort in every iteration every element compared to its adjacent elements
after some iterations we will get the sorted list.




 